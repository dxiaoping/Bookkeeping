package com.managMoney.service;
//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Service.java
//  @ Date : 2018/12/11
//  @ Author : 
//


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.managMoney.data.ConnentOrcl;
import com.managMoney.entity.Bill;
import com.sun.org.apache.regexp.internal.recompile;

public class Service {
    // 创建一个数据库连接
    Connection connection = null;
    // 创建预编译语句对象，一般都是用这个而不用Statement
    PreparedStatement pstm = null;
    // 创建一个结果集对象
    ResultSet rs = null;
    ConnentOrcl dbs = new ConnentOrcl();

    /**
     * 对收入支出项进行增加删除
     *
     * @param typeName
     */
    public void insertType(String typeName, String typeDescription) {
        connection = dbs.getConnection();
        String sql = ("insert into IOTYPE_INFO(type_id, type_name, type_description) " +
                "values (type_id.nextval,'" + typeName + "','" + typeDescription + "')");
        System.out.println(sql);
        try {
            pstm = connection.prepareStatement(sql);
            pstm.executeQuery();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public void deleteType(String typeId) {
        connection = dbs.getConnection();
        String sql = ("delete from IOTYPE_INFO where TYPE_ID='" + typeId + "'");

        try {
            pstm = connection.prepareStatement(sql);
            rs = pstm.executeQuery();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
//	public void insertOutconeType(String typeName) {
//
//	}
//	public void deleteOutcomeType(String typeName) {
//
//	}
    /**
     * 对账单进行增删修查
     */
    /**
     * @param billType  //账单类型/收入或支出账单
     * @param billClass //账单类别/如饮食、社交
     * @param billName  //账单名称
     * @param billMoney //账单金额
     * @param payTime   //费用支出时间
     */
    public void insertBill(String billType, String billClass,
                           String billName, float billMoney, String payTime) {
        connection = dbs.getConnection();

        String sql = ("insert into bill_info (bill_id, name, bill_type, bill_class, bill_money, pay_time)\n" +
                "VALUES (bill_id.nextval, '" + billName + "','" + billType + "', '" + billClass + "'," + billMoney + ",to_date('" + payTime + "', 'yyyy-mm-dd'))");
        System.out.println(sql);
        try {
            pstm = connection.prepareStatement(sql);
            rs = pstm.executeQuery();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public void deleteBill(long billId) {
        connection = dbs.getConnection();
        String sql = ("delete from BILL_INFO where BILL_ID=" + billId);
        System.out.println(sql);
        try {
            pstm = connection.prepareStatement(sql);
            rs = pstm.executeQuery();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public void modifyBill(String mdfKey, String mdfValue,Bill bill) {
        connection = dbs.getConnection();
        String sql = ("update BILL_INFO set " + mdfKey + "='" + mdfValue+"'where BILL_ID="+bill.getBillId());
        System.out.println(sql);
        try {
            pstm = connection.prepareStatement(sql);
            rs = pstm.executeQuery();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public void modifyBill(String mdfKey, float mdfValue) {
        connection = dbs.getConnection();
        String sql = ("update BILL_INFO set " + mdfKey + "=" + mdfValue);
        System.out.println(sql);
        try {
            pstm = connection.prepareStatement(sql);
            rs = pstm.executeQuery();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public List<Bill> getBillList(String billType) {
    	List<Bill> bills = new ArrayList<Bill>();
        connection = dbs.getConnection();

        String sql = ("select * from BILL_INFO where bill_type='"+billType +"'");
        try {
            pstm = connection.prepareStatement(sql);
            rs = pstm.executeQuery();
            while (rs.next()) {
            	Bill bill = new Bill();
            	bill.setBillId(rs.getLong("bill_id"));
            	bill.setBillName(rs.getString("name"));
            	bill.setBillType(rs.getString("bill_type"));
            	bill.setBillClass(rs.getString("bill_class"));
            	bill.setBillMoney(rs.getFloat("bill_money"));
            	bill.setPayTime(rs.getString("pay_time"));
            	bill.setCreateTime(rs.getDate("create_time"));
            	bills.add(bill);
              System.out.println(bill.getBillId() + "\t" + bill.getBillName() + "\t"
                      + bill.getPayTime() + "\t" + bill.getCreateTime());
          }
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        return bills;
    }

    
   
    public void register(String phoneNum, String psd, String userName) {
        connection = dbs.getConnection();
        String sql = ("insert into USER_INFO(user_id, phone_num, psd, user_name) " +
                "VALUES(user_id.nextval,'" + phoneNum + "','" + psd + "','" + userName + "')");
        System.out.println(sql);
        try {
            pstm = connection.prepareStatement(sql);
            pstm.executeQuery();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
//        new Service().LoginConfirm("13577883344", "dxp123456");
//        new Service().insertType("学习", "支出");
//        new Service().deleteType("饮食");
//        new Service().register("13577888899", "dxp123456", "小二");
//
//        new Service().insertBill("收入", "兼职", "家教", 150, "2018-12-13");
//        new Service().deleteBill(1007);
//        new Service().modifyBill("bill_money",200);
    	new Service().getBillList("支出");
    }
}
